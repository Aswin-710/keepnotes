{"ast":null,"code":"var _jsxFileName = \"C:\\\\React-Projects-master\\\\google-keep-clone\\\\src\\\\context\\\\DataProvider.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DataContext = /*#__PURE__*/createContext(null);\n\nconst DataProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [notes, setNotes] = useState([]);\n  const [archiveNotes, setAcrchiveNotes] = useState([]);\n  const [deleteNotes, setDeleteNotes] = useState([]);\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: {\n      notes,\n      setNotes,\n      archiveNotes,\n      setAcrchiveNotes,\n      deleteNotes,\n      setDeleteNotes\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DataProvider, \"kLBreo/9odHbvIEUEJkjRx38pX4=\");\n\n_c = DataProvider;\nexport default DataProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"sources":["C:/React-Projects-master/google-keep-clone/src/context/DataProvider.jsx"],"names":["createContext","useState","DataContext","DataProvider","children","notes","setNotes","archiveNotes","setAcrchiveNotes","deleteNotes","setDeleteNotes"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;;AAEA,OAAO,MAAMC,WAAW,gBAAGF,aAAa,CAAC,IAAD,CAAjC;;AAEP,MAAMG,YAAY,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAEnC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,YAAD,EAAeC,gBAAf,IAAmCP,QAAQ,CAAC,EAAD,CAAjD;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,EAAD,CAA9C;AAEA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AACzBI,MAAAA,KADyB;AAEzBC,MAAAA,QAFyB;AAGzBC,MAAAA,YAHyB;AAIzBC,MAAAA,gBAJyB;AAKzBC,MAAAA,WALyB;AAMzBC,MAAAA;AANyB,KAA7B;AAAA,cASKN;AATL;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAnBD;;GAAMD,Y;;KAAAA,Y;AAqBN,eAAeA,YAAf","sourcesContent":["import { createContext, useState } from 'react';\n\nexport const DataContext = createContext(null);\n\nconst DataProvider = ({ children }) => {\n\n    const [notes, setNotes] = useState([]);\n    const [archiveNotes, setAcrchiveNotes] = useState([]);\n    const [deleteNotes, setDeleteNotes] = useState([]);\n\n    return (\n        <DataContext.Provider value={{\n            notes,\n            setNotes,\n            archiveNotes,\n            setAcrchiveNotes,\n            deleteNotes,\n            setDeleteNotes\n        }}\n        >\n            {children}\n        </DataContext.Provider>\n    )\n}\n\nexport default DataProvider;"]},"metadata":{},"sourceType":"module"}