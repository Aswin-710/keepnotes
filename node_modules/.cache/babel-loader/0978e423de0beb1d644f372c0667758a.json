{"ast":null,"code":"var _jsxFileName = \"C:\\\\React-Projects-master\\\\google-keep-clone\\\\src\\\\components\\\\notes\\\\Form.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useContext } from 'react';\nimport { Box, TextField, ClickAwayListener } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { v4 as uuid } from 'uuid';\nimport { DataContext } from '../../context/DataProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled(Box)`\n    display: flex;\n    flex-direction: column;\n    margin: auto;\n    box-shadow: 0 1px 2px 0 rgb(60 64 67 / 30%), 0 2px 6px 2px rgb(60 64 67 / 15%);\n    border-color: #e0e0e0;\n    width: 600px;\n    border-radius: 8px;\n    min-height: 30px;\n    padding: 10px 15px;\n`;\n_c = Container;\nconst note = {\n  id: '',\n  heading: '',\n  text: ''\n};\n\nconst Form = () => {\n  _s();\n\n  const [showTextField, setShowTextField] = useState(false);\n  const [addNote, setAddNote] = useState({ ...note,\n    id: uuid()\n  });\n  const {\n    setNotes\n  } = useContext(DataContext);\n  const containerRef = useRef();\n\n  const handleClickAway = () => {\n    setShowTextField(false);\n    containerRef.current.style.minheight = '30px';\n    setAddNote({ ...note,\n      id: uuid()\n    });\n\n    if (addNote.heading || addNote.text) {\n      setNotes(prevArr => [addNote, ...prevArr]);\n    }\n  };\n\n  const onTextAreaClick = () => {\n    setShowTextField(true);\n    containerRef.current.style.minheight = '70px';\n  };\n\n  const onTextChange = e => {\n    let changedNote = { ...addNote,\n      [e.target.name]: e.target.value\n    };\n    setAddNote(changedNote);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ClickAwayListener, {\n    onClickAway: handleClickAway,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      ref: containerRef,\n      children: [showTextField && /*#__PURE__*/_jsxDEV(TextField, {\n        placeholder: \"Title\",\n        variant: \"standard\",\n        InputProps: {\n          disableUnderline: true\n        },\n        style: {\n          marginBottom: 10\n        },\n        onChange: e => onTextChange(e),\n        name: \"heading\",\n        value: addNote.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        placeholder: \"Take a note...\",\n        multiline: true,\n        maxRows: Infinity,\n        variant: \"standard\",\n        InputProps: {\n          disableUnderline: true\n        },\n        onClick: onTextAreaClick,\n        onChange: e => onTextChange(e),\n        name: \"text\",\n        value: addNote.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"ZAD1l7AeKu6McTzJOmUS46x+FzY=\");\n\n_c2 = Form;\nexport default Form;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Form\");","map":{"version":3,"sources":["C:/React-Projects-master/google-keep-clone/src/components/notes/Form.jsx"],"names":["useState","useRef","useContext","Box","TextField","ClickAwayListener","styled","v4","uuid","DataContext","Container","note","id","heading","text","Form","showTextField","setShowTextField","addNote","setAddNote","setNotes","containerRef","handleClickAway","current","style","minheight","prevArr","onTextAreaClick","onTextChange","e","changedNote","target","name","value","disableUnderline","marginBottom","Infinity"],"mappings":"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","sourcesContent":["import { useState, useRef, useContext } from 'react';\n\nimport { Box, TextField, ClickAwayListener } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { v4 as uuid } from 'uuid';\n\nimport { DataContext } from '../../context/DataProvider';\n\nconst Container = styled(Box)`\n    display: flex;\n    flex-direction: column;\n    margin: auto;\n    box-shadow: 0 1px 2px 0 rgb(60 64 67 / 30%), 0 2px 6px 2px rgb(60 64 67 / 15%);\n    border-color: #e0e0e0;\n    width: 600px;\n    border-radius: 8px;\n    min-height: 30px;\n    padding: 10px 15px;\n`\n\nconst note = {\n    id: '',\n    heading: '',\n    text: ''\n}\n\nconst Form = () => {\n\n    const [showTextField, setShowTextField] = useState(false);\n    const [addNote, setAddNote] = useState({ ...note, id: uuid() });\n\n    const { setNotes } = useContext(DataContext);\n    \n    const containerRef = useRef();\n\n    const handleClickAway = () => {\n        setShowTextField(false);\n        containerRef.current.style.minheight = '30px'\n        setAddNote({ ...note, id: uuid() });\n\n        if (addNote.heading || addNote.text) {\n            setNotes(prevArr => [addNote, ...prevArr])\n        }\n    }\n    \n    const onTextAreaClick = () => {\n        setShowTextField(true);\n        containerRef.current.style.minheight = '70px'\n    }\n\n    const onTextChange = (e) => {\n        let changedNote = { ...addNote, [e.target.name]: e.target.value };\n        setAddNote(changedNote);\n    }\n\n    return (\n        <ClickAwayListener onClickAway={handleClickAway}>\n            <Container ref={containerRef}>\n                {   showTextField && \n                    <TextField \n                        placeholder=\"Title\"\n                        variant=\"standard\"\n                        InputProps={{ disableUnderline: true }}\n                        style={{ marginBottom: 10 }}\n                        onChange={(e) => onTextChange(e)}\n                        name='heading'\n                        value={addNote.heading}\n                    />\n                }\n                <TextField\n                    placeholder=\"Take a note...\"\n                    multiline\n                    maxRows={Infinity}\n                    variant=\"standard\"\n                    InputProps={{ disableUnderline: true }}\n                    onClick={onTextAreaClick}\n                    onChange={(e) => onTextChange(e)}\n                    name='text'\n                    value={addNote.text}\n                />\n            </Container>\n        </ClickAwayListener>\n    )\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}