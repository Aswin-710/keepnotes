{"ast":null,"code":"var _jsxFileName = \"C:\\\\React-Projects-master\\\\google-keep-clone\\\\src\\\\components\\\\SwipeDrawer.jsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { styled, useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport MuiDrawer from '@mui/material/Drawer'; //components\n\nimport HeaderBar from './HeaderBar';\nimport NavList from './NavList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\n\nconst openedMixin = theme => ({\n  width: drawerWidth,\n  transition: theme.transitions.create('width', {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.enteringScreen\n  }),\n  overflowX: 'hidden'\n});\n\nconst closedMixin = theme => ({\n  transition: theme.transitions.create('width', {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen\n  }),\n  overflowX: 'hidden',\n  width: `calc(${theme.spacing(7)} + 1px)`,\n  [theme.breakpoints.up('sm')]: {\n    width: `calc(${theme.spacing(9)} + 1px)`\n  }\n});\n\nconst DrawerHeader = styled('div')(_ref => {\n  let {\n    theme\n  } = _ref;\n  return { ...theme.mixins.toolbar\n  };\n});\n_c = DrawerHeader;\nconst Drawer = styled(MuiDrawer, {\n  shouldForwardProp: prop => prop !== 'open'\n})(_ref2 => {\n  let {\n    theme,\n    open\n  } = _ref2;\n  return {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n    boxSizing: 'border-box',\n    ...(open && { ...openedMixin(theme),\n      '& .MuiDrawer-paper': openedMixin(theme)\n    }),\n    ...(!open && { ...closedMixin(theme),\n      '& .MuiDrawer-paper': closedMixin(theme)\n    })\n  };\n});\n_c2 = Drawer;\n\nfunction SwipeDrawer() {\n  _s();\n\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(true);\n\n  const handleDrawer = () => {\n    setOpen(prevState => !prevState);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(HeaderBar, {\n      open: open,\n      handleDrawer: handleDrawer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      variant: \"permanent\",\n      open: open,\n      children: [/*#__PURE__*/_jsxDEV(DrawerHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(NavList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SwipeDrawer, \"C+PwaSq4kVaSX7ewkZP/5H5aQUE=\", false, function () {\n  return [useTheme];\n});\n\n_c3 = SwipeDrawer;\nexport default SwipeDrawer;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"DrawerHeader\");\n$RefreshReg$(_c2, \"Drawer\");\n$RefreshReg$(_c3, \"SwipeDrawer\");","map":{"version":3,"sources":["C:/React-Projects-master/google-keep-clone/src/components/SwipeDrawer.jsx"],"names":["React","styled","useTheme","Box","MuiDrawer","HeaderBar","NavList","drawerWidth","openedMixin","theme","width","transition","transitions","create","easing","sharp","duration","enteringScreen","overflowX","closedMixin","leavingScreen","spacing","breakpoints","up","DrawerHeader","mixins","toolbar","Drawer","shouldForwardProp","prop","open","flexShrink","whiteSpace","boxSizing","SwipeDrawer","setOpen","useState","handleDrawer","prevState","display"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { styled, useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport MuiDrawer from '@mui/material/Drawer';\n\n//components\nimport HeaderBar from './HeaderBar';\nimport NavList from './NavList';\n\nconst drawerWidth = 240;\n\nconst openedMixin = (theme) => ({\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n    }),\n    overflowX: 'hidden',\n});\n\nconst closedMixin = (theme) => ({\n    transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: `calc(${theme.spacing(7)} + 1px)`,\n    [theme.breakpoints.up('sm')]: {\n        width: `calc(${theme.spacing(9)} + 1px)`,\n    },\n});\n\nconst DrawerHeader = styled('div')(({ theme }) => ({\n    ...theme.mixins.toolbar,\n}));\n\n\nconst Drawer = styled(MuiDrawer, { shouldForwardProp: (prop) => prop !== 'open' })(\n    ({ theme, open }) => ({\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: 'nowrap',\n        boxSizing: 'border-box',\n        ...(open && {\n            ...openedMixin(theme),\n            '& .MuiDrawer-paper': openedMixin(theme),\n        }),\n        ...(!open && {\n            ...closedMixin(theme),\n            '& .MuiDrawer-paper': closedMixin(theme),\n        }),\n    }),\n);\n\nfunction SwipeDrawer() {\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(true);\n\n    const handleDrawer = () => {\n        setOpen(prevState => !prevState);\n    };\n\n    return (\n        <Box sx={{ display: 'flex' }}>\n            <HeaderBar\n                open={open}\n                handleDrawer={handleDrawer}\n            />\n            <Drawer variant=\"permanent\" open={open}>\n                <DrawerHeader></DrawerHeader>\n                <NavList />\n            </Drawer>\n        </Box>\n    );\n}\n\nexport default SwipeDrawer;"]},"metadata":{},"sourceType":"module"}